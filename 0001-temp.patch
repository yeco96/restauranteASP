From cb5ff9d7578d4535c924b2e4d352a609a0d92d91 Mon Sep 17 00:00:00 2001
From: yeco96 <yeisonpa.96@hotmail.com>
Date: Sat, 28 Nov 2020 23:02:09 -0600
Subject: [PATCH] temp

---
 restauranteASP/Articulo.cs                    |   6 +-
 restauranteASP/Categoria.cs                   |  31 ++++
 restauranteASP/Cliente.cs                     |  11 +-
 .../Controllers/CRUD/ArticuloController.cs    | 127 +++++++++++++++++
 .../CRUD/{MesaCRUD => }/MesasController.cs    |   0
 restauranteASP/Mesa.cs                        |  15 +-
 restauranteASP/MesaEstado.cs                  |   8 +-
 restauranteASP/Pedido.cs                      |   1 -
 restauranteASP/UnidadMedida.cs                |  30 ++++
 restauranteASP/Views/Articulo/Create.cshtml   | 133 ++++++++++++++++++
 restauranteASP/Views/Articulo/Delete.cshtml   | 111 +++++++++++++++
 restauranteASP/Views/Articulo/Details.cshtml  | 103 ++++++++++++++
 restauranteASP/Views/Articulo/Edit.cshtml     | 108 ++++++++++++++
 restauranteASP/Views/Articulo/Index.cshtml    |  89 ++++++++++++
 restauranteASP/Views/Home/CRUD.cshtml         |  25 ++++
 restauranteASP/Views/Mesas/Delete.cshtml      |   3 +-
 restauranteASP/Views/Mesas/Details.cshtml     |   2 +-
 restauranteASP/restauranteASP.csproj          |  15 +-
 restauranteASP/restauranteBD.Context.cs       |   2 +
 restauranteASP/restauranteBD.edmx             | 127 ++++++++++++++++-
 restauranteASP/restauranteBD.edmx.diagram     |   4 +
 21 files changed, 916 insertions(+), 35 deletions(-)
 create mode 100644 restauranteASP/Categoria.cs
 create mode 100644 restauranteASP/Controllers/CRUD/ArticuloController.cs
 rename restauranteASP/Controllers/CRUD/{MesaCRUD => }/MesasController.cs (100%)
 create mode 100644 restauranteASP/UnidadMedida.cs
 create mode 100644 restauranteASP/Views/Articulo/Create.cshtml
 create mode 100644 restauranteASP/Views/Articulo/Delete.cshtml
 create mode 100644 restauranteASP/Views/Articulo/Details.cshtml
 create mode 100644 restauranteASP/Views/Articulo/Edit.cshtml
 create mode 100644 restauranteASP/Views/Articulo/Index.cshtml

diff --git a/restauranteASP/Articulo.cs b/restauranteASP/Articulo.cs
index 4c5a77f..b3cc110 100644
--- a/restauranteASP/Articulo.cs
+++ b/restauranteASP/Articulo.cs
@@ -27,12 +27,14 @@ namespace restauranteASP
         public string sku { get; set; }
         public Nullable<System.DateTime> fechaIngreso { get; set; }
         public Nullable<System.DateTime> fechaCaducidad { get; set; }
-        public int idCategoria { get; set; }
-        public int idUnidadMedida { get; set; }
+        public Nullable<int> idCategoria { get; set; }
+        public Nullable<int> idUnidadMedida { get; set; }
         public Nullable<int> idProveedor { get; set; }
         public Nullable<decimal> tarifaImpuesto { get; set; }
     
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
         public virtual ICollection<PedidoDetalle> PedidoDetalle { get; set; }
+        public virtual Categoria Categoria { get; set; }
+        public virtual UnidadMedida UnidadMedida { get; set; }
     }
 }
diff --git a/restauranteASP/Categoria.cs b/restauranteASP/Categoria.cs
new file mode 100644
index 0000000..5bbd4ea
--- /dev/null
+++ b/restauranteASP/Categoria.cs
@@ -0,0 +1,31 @@
+//------------------------------------------------------------------------------
+// <auto-generated>
+//     Este código se generó a partir de una plantilla.
+//
+//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
+//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace restauranteASP
+{
+    using System;
+    using System.Collections.Generic;
+    
+    public partial class Categoria
+    {
+        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
+        public Categoria()
+        {
+            this.Articulo = new HashSet<Articulo>();
+        }
+    
+
+        public int idCategoria { get; set; }
+        public string descipcion { get; set; }
+        public Nullable<bool> activo { get; set; }
+    
+        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
+        public virtual ICollection<Articulo> Articulo { get; set; }
+    }
+}
diff --git a/restauranteASP/Cliente.cs b/restauranteASP/Cliente.cs
index ed29e91..6233c8d 100644
--- a/restauranteASP/Cliente.cs
+++ b/restauranteASP/Cliente.cs
@@ -11,8 +11,7 @@ namespace restauranteASP
 {
     using System;
     using System.Collections.Generic;
-    using System.ComponentModel.DataAnnotations;
-
+    
     public partial class Cliente
     {
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
@@ -20,20 +19,14 @@ namespace restauranteASP
         {
             this.Pedido = new HashSet<Pedido>();
         }
-
-        [Display(Name = "Identificación")]
+    
         public string idCliente { get; set; }
-        [Display(Name = "Nombre Completo")]
         public string nombreCompleto { get; set; }
-        [Display(Name = "Correo Electronico")]
         public string correoElectronico { get; set; }
-        [Display(Name = "Telefono Celular")]
         public string telefonoCelular { get; set; }
-        [Display(Name = "Telefono Residencial")]
         public string telefonoResidencial { get; set; }
     
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
-        [Display(Name = "Pedido")]
         public virtual ICollection<Pedido> Pedido { get; set; }
     }
 }
diff --git a/restauranteASP/Controllers/CRUD/ArticuloController.cs b/restauranteASP/Controllers/CRUD/ArticuloController.cs
new file mode 100644
index 0000000..7c3b3f6
--- /dev/null
+++ b/restauranteASP/Controllers/CRUD/ArticuloController.cs
@@ -0,0 +1,127 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Data;
+using System.Data.Entity;
+using System.Linq;
+using System.Net;
+using System.Web;
+using System.Web.Mvc;
+using restauranteASP;
+
+namespace restauranteASP.Controllers.CRUD
+{
+    public class ArticuloController : Controller
+    {
+        private restauranteEntities db = new restauranteEntities();
+
+        // GET: Articulo
+        public ActionResult Index()
+        {
+            return View(db.Articulo.ToList());
+        }
+
+        // GET: Articulo/Details/5
+        public ActionResult Details(int? id)
+        {
+            if (id == null)
+            {
+                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
+            }
+            Articulo articulo = db.Articulo.Find(id);
+            if (articulo == null)
+            {
+                return HttpNotFound();
+            }
+            return View(articulo);
+        }
+
+        // GET: Articulo/Create
+        public ActionResult Create()
+        {
+            return View();
+        }
+
+        // POST: Articulo/Create
+        // Para protegerse de ataques de publicación excesiva, habilite las propiedades específicas a las que quiere enlazarse. Para obtener 
+        // más detalles, vea https://go.microsoft.com/fwlink/?LinkId=317598.
+        [HttpPost]
+        [ValidateAntiForgeryToken]
+        public ActionResult Create([Bind(Include = "idArticulo,descipcion,precio,cantidad,sku,fechaIngreso,fechaCaducidad,idCategoria,idUnidadMedida,idProveedor,tarifaImpuesto")] Articulo articulo)
+        {
+            if (ModelState.IsValid)
+            {
+                db.Articulo.Add(articulo);
+                db.SaveChanges();
+                return RedirectToAction("Index");
+            }
+
+            return View(articulo);
+        }
+
+        // GET: Articulo/Edit/5
+        public ActionResult Edit(int? id)
+        {
+            if (id == null)
+            {
+                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
+            }
+            Articulo articulo = db.Articulo.Find(id);
+            if (articulo == null)
+            {
+                return HttpNotFound();
+            }
+            return View(articulo);
+        }
+
+        // POST: Articulo/Edit/5
+        // Para protegerse de ataques de publicación excesiva, habilite las propiedades específicas a las que quiere enlazarse. Para obtener 
+        // más detalles, vea https://go.microsoft.com/fwlink/?LinkId=317598.
+        [HttpPost]
+        [ValidateAntiForgeryToken]
+        public ActionResult Edit([Bind(Include = "idArticulo,descipcion,precio,cantidad,sku,fechaIngreso,fechaCaducidad,idCategoria,idUnidadMedida,idProveedor,tarifaImpuesto")] Articulo articulo)
+        {
+            if (ModelState.IsValid)
+            {
+                db.Entry(articulo).State = EntityState.Modified;
+                db.SaveChanges();
+                return RedirectToAction("Index");
+            }
+            return View(articulo);
+        }
+
+        // GET: Articulo/Delete/5
+        public ActionResult Delete(int? id)
+        {
+            if (id == null)
+            {
+                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
+            }
+            Articulo articulo = db.Articulo.Find(id);
+            if (articulo == null)
+            {
+                return HttpNotFound();
+            }
+            return View(articulo);
+        }
+
+        // POST: Articulo/Delete/5
+        [HttpPost, ActionName("Delete")]
+        [ValidateAntiForgeryToken]
+        public ActionResult DeleteConfirmed(int id)
+        {
+            Articulo articulo = db.Articulo.Find(id);
+            db.Articulo.Remove(articulo);
+            db.SaveChanges();
+            return RedirectToAction("Index");
+        }
+
+        protected override void Dispose(bool disposing)
+        {
+            if (disposing)
+            {
+                db.Dispose();
+            }
+            base.Dispose(disposing);
+        }
+    }
+}
diff --git a/restauranteASP/Controllers/CRUD/MesaCRUD/MesasController.cs b/restauranteASP/Controllers/CRUD/MesasController.cs
similarity index 100%
rename from restauranteASP/Controllers/CRUD/MesaCRUD/MesasController.cs
rename to restauranteASP/Controllers/CRUD/MesasController.cs
diff --git a/restauranteASP/Mesa.cs b/restauranteASP/Mesa.cs
index 9098242..78f7943 100644
--- a/restauranteASP/Mesa.cs
+++ b/restauranteASP/Mesa.cs
@@ -11,8 +11,7 @@ namespace restauranteASP
 {
     using System;
     using System.Collections.Generic;
-    using System.ComponentModel.DataAnnotations;
-
+    
     public partial class Mesa
     {
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
@@ -20,21 +19,13 @@ namespace restauranteASP
         {
             this.Pedido = new HashSet<Pedido>();
         }
+    
 
-        [Range(1, 999)]
-        [Display(Name = "Número")]
         public int idMesa { get; set; }
-        [Required]
-        [Display(Name = "Descripción")]
         public string descripcion { get; set; }
-        [Display(Name = "Estado")]
         public Nullable<int> idEstado { get; set; }
-        [Required]
-        [Range(1,999)]
-        [Display(Name = "Capacidad de Personas")]
         public Nullable<int> capacidadPersona { get; set; }
-
-        [Display(Name = "Estado")]
+    
         public virtual MesaEstado MesaEstado { get; set; }
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
         public virtual ICollection<Pedido> Pedido { get; set; }
diff --git a/restauranteASP/MesaEstado.cs b/restauranteASP/MesaEstado.cs
index 92bd670..1cd486d 100644
--- a/restauranteASP/MesaEstado.cs
+++ b/restauranteASP/MesaEstado.cs
@@ -11,8 +11,7 @@ namespace restauranteASP
 {
     using System;
     using System.Collections.Generic;
-    using System.ComponentModel.DataAnnotations;
-
+    
     public partial class MesaEstado
     {
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
@@ -20,13 +19,12 @@ namespace restauranteASP
         {
             this.Mesa = new HashSet<Mesa>();
         }
-
-        [Display(Name = "Estado")]
+    
         public int idMesaEstado { get; set; }
-        [Display(Name = "Estado")]
         public string descripcion { get; set; }
     
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
         public virtual ICollection<Mesa> Mesa { get; set; }
+
     }
 }
diff --git a/restauranteASP/Pedido.cs b/restauranteASP/Pedido.cs
index 106ccb1..99f0d90 100644
--- a/restauranteASP/Pedido.cs
+++ b/restauranteASP/Pedido.cs
@@ -20,7 +20,6 @@ namespace restauranteASP
             this.PedidoDetalle = new HashSet<PedidoDetalle>();
         }
     
-
         public int idPedido { get; set; }
         public string idCliente { get; set; }
         public string observacion { get; set; }
diff --git a/restauranteASP/UnidadMedida.cs b/restauranteASP/UnidadMedida.cs
new file mode 100644
index 0000000..e18d3ac
--- /dev/null
+++ b/restauranteASP/UnidadMedida.cs
@@ -0,0 +1,30 @@
+//------------------------------------------------------------------------------
+// <auto-generated>
+//     Este código se generó a partir de una plantilla.
+//
+//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
+//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace restauranteASP
+{
+    using System;
+    using System.Collections.Generic;
+    
+    public partial class UnidadMedida
+    {
+        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
+        public UnidadMedida()
+        {
+            this.Articulo = new HashSet<Articulo>();
+        }
+    
+        public int idUnidadMedida { get; set; }
+        public string descipcion { get; set; }
+        public Nullable<bool> activo { get; set; }
+    
+        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
+        public virtual ICollection<Articulo> Articulo { get; set; }
+    }
+}
diff --git a/restauranteASP/Views/Articulo/Create.cshtml b/restauranteASP/Views/Articulo/Create.cshtml
new file mode 100644
index 0000000..bc431b0
--- /dev/null
+++ b/restauranteASP/Views/Articulo/Create.cshtml
@@ -0,0 +1,133 @@
+﻿@model restauranteASP.Articulo
+
+@{
+    ViewBag.Title = "Create";
+    Layout = "~/Views/Shared/_Layout.cshtml";
+}
+
+<h2>Create</h2>
+
+@using (Html.BeginForm())
+{
+    @Html.AntiForgeryToken()
+
+<div class="form-horizontal">
+    <h4>Articulo</h4>
+    <hr />
+    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
+    <div class="form-group">
+        @Html.LabelFor(model => model.idArticulo, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.idArticulo, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.idArticulo, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.descipcion, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.descipcion, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.descipcion, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.sku, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.sku, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.sku, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.fechaIngreso, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.fechaIngreso, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.fechaIngreso, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.fechaCaducidad, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.fechaCaducidad, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.fechaCaducidad, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    @*<div class="form-group">
+            @Html.LabelFor(model => model.idCategoria, htmlAttributes: new { @class = "control-label col-md-2" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.idCategoria, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.idCategoria, "", new { @class = "text-danger" })
+            </div>
+        </div>*@
+
+    @*<div class="form-group">
+            @Html.LabelFor(model => model.idUnidadMedida, htmlAttributes: new { @class = "control-label col-md-2" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.idUnidadMedida, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.idUnidadMedida, "", new { @class = "text-danger" })
+            </div>
+        </div>*@
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.idCategoria, "Categoria", htmlAttributes: new { @class = "control-label col-md-10" })
+        <div class="col-md-10">
+            @Html.DropDownList("idCategoria", null, htmlAttributes: new { @class = "form-control" })
+            @Html.ValidationMessageFor(model => model.idCategoria, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.idUnidadMedida, "UnidadMedida", htmlAttributes: new { @class = "control-label col-md-10" })
+        <div class="col-md-10">
+            @Html.DropDownList("idUnidadMedida", null, htmlAttributes: new { @class = "form-control" })
+            @Html.ValidationMessageFor(model => model.idUnidadMedida, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.idProveedor, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.idProveedor, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.idProveedor, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        @Html.LabelFor(model => model.tarifaImpuesto, htmlAttributes: new { @class = "control-label col-md-2" })
+        <div class="col-md-10">
+            @Html.EditorFor(model => model.tarifaImpuesto, new { htmlAttributes = new { @class = "form-control" } })
+            @Html.ValidationMessageFor(model => model.tarifaImpuesto, "", new { @class = "text-danger" })
+        </div>
+    </div>
+
+    <div class="form-group">
+        <div class="col-md-offset-2 col-md-10">
+            <input type="submit" value="Crear" class="btn btn-success" />
+        </div>
+    </div>
+</div>
+}
+
+<div>
+    @Html.ActionLink("Volver a la lista", "Index")
+</div>
+
diff --git a/restauranteASP/Views/Articulo/Delete.cshtml b/restauranteASP/Views/Articulo/Delete.cshtml
new file mode 100644
index 0000000..c9a4e6f
--- /dev/null
+++ b/restauranteASP/Views/Articulo/Delete.cshtml
@@ -0,0 +1,111 @@
+﻿@model restauranteASP.Articulo
+
+@{
+    ViewBag.Title = "Eliminar Articulo";
+    Layout = "~/Views/Shared/_Layout.cshtml";
+}
+
+<h4 class="pt-1">Articulo</h4>
+
+<p class="pt-1">Esta seguro que desea eliminar la mesa?</p>
+<div>
+    <h4>Articulo</h4>
+    <hr />
+    <dl class="dl-horizontal">
+        <dt>
+            @Html.DisplayNameFor(model => model.descipcion)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.descipcion)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.precio)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.precio)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.cantidad)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.cantidad)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.sku)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.sku)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.fechaIngreso)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.fechaIngreso)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.fechaCaducidad)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.fechaCaducidad)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.Categoria.descipcion)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.Categoria.descipcion)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.UnidadMedida.descipcion)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.UnidadMedida.descipcion)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.idProveedor)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.idProveedor)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.tarifaImpuesto)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.tarifaImpuesto)
+        </dd>
+
+    </dl>
+
+    @using (Html.BeginForm())
+    {
+        @Html.AntiForgeryToken()
+
+        <div class="form-actions no-color">
+            <input type="submit" value="Eliminar" class="btn btn-danger" />
+        </div>
+    }
+</div>
+
+
+
+<div class="pt-2">
+    @Html.ActionLink("Volver a la lista", "Index")
+</div>
diff --git a/restauranteASP/Views/Articulo/Details.cshtml b/restauranteASP/Views/Articulo/Details.cshtml
new file mode 100644
index 0000000..d751001
--- /dev/null
+++ b/restauranteASP/Views/Articulo/Details.cshtml
@@ -0,0 +1,103 @@
+﻿@model restauranteASP.Articulo
+
+@{
+    ViewBag.Title = "Detalles de Articulo";
+    Layout = "~/Views/Shared/_Layout.cshtml";
+}
+
+<h2>Details</h2>
+
+<div>
+    <h4>Articulo</h4>
+    <hr />
+    <dl class="dl-horizontal">
+        <dt>
+            @Html.DisplayNameFor(model => model.descipcion)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.descipcion)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.precio)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.precio)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.cantidad)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.cantidad)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.sku)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.sku)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.fechaIngreso)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.fechaIngreso)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.fechaCaducidad)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.fechaCaducidad)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.Categoria.descipcion)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.Categoria.descipcion)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.UnidadMedida.descipcion)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.UnidadMedida.descipcion)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.idProveedor)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.idProveedor)
+        </dd>
+
+        <dt>
+            @Html.DisplayNameFor(model => model.tarifaImpuesto)
+        </dt>
+
+        <dd>
+            @Html.DisplayFor(model => model.tarifaImpuesto)
+        </dd>
+
+    </dl>
+</div>
+<p>
+    @Html.ActionLink("Editar", "Edit", new { id = Model.idArticulo }, new { @class = "btn btn-warning" })
+</p>
+
+
+<div>
+    @Html.ActionLink("Volver a la lista", "Index")
+</div>
\ No newline at end of file
diff --git a/restauranteASP/Views/Articulo/Edit.cshtml b/restauranteASP/Views/Articulo/Edit.cshtml
new file mode 100644
index 0000000..aeaac9d
--- /dev/null
+++ b/restauranteASP/Views/Articulo/Edit.cshtml
@@ -0,0 +1,108 @@
+﻿@model restauranteASP.Articulo
+
+@{
+    ViewBag.Title = "Ediar Articulo";
+    Layout = "~/Views/Shared/_Layout.cshtml";
+}
+
+@using (Html.BeginForm())
+{
+    @Html.AntiForgeryToken()
+    
+    <div class="form-horizontal">
+        <h4 class="pt-1">Articulo</h4>
+        <hr />
+        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
+        @Html.HiddenFor(model => model.idArticulo)
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.descipcion, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.descipcion, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.descipcion, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.sku, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.sku, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.sku, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.fechaIngreso, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.fechaIngreso, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.fechaIngreso, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.fechaCaducidad, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.fechaCaducidad, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.fechaCaducidad, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.idCategoria, "Categoria", htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.DropDownList("idCategoria", null, htmlAttributes: new { @class = "form-control" })
+                @Html.ValidationMessageFor(model => model.idCategoria, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.idUnidadMedida, "Categoria", htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.DropDownList("idUnidadMedida", null, htmlAttributes: new { @class = "form-control" })
+                @Html.ValidationMessageFor(model => model.idUnidadMedida, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.idProveedor, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.idProveedor, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.idProveedor, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            @Html.LabelFor(model => model.tarifaImpuesto, htmlAttributes: new { @class = "control-label col-md-10" })
+            <div class="col-md-10">
+                @Html.EditorFor(model => model.tarifaImpuesto, new { htmlAttributes = new { @class = "form-control" } })
+                @Html.ValidationMessageFor(model => model.tarifaImpuesto, "", new { @class = "text-danger" })
+            </div>
+        </div>
+
+        <div class="form-group">
+            <div class="col-md-offset-2 col-md-10">
+                <input type="submit" value="Guardar" class="btn btn-success" />
+            </div>
+        </div>
+    </div>
+}
+
+<div>
+    @Html.ActionLink("Volver a la lista", "Index")
+</div>
diff --git a/restauranteASP/Views/Articulo/Index.cshtml b/restauranteASP/Views/Articulo/Index.cshtml
new file mode 100644
index 0000000..5142b3f
--- /dev/null
+++ b/restauranteASP/Views/Articulo/Index.cshtml
@@ -0,0 +1,89 @@
+﻿@model IEnumerable<restauranteASP.Articulo>
+
+@{
+    ViewBag.Title = "Index";
+    Layout = "~/Views/Shared/_Layout.cshtml";
+}
+
+<p>
+    @Html.ActionLink("Crear", "Create", null, new { @class = "btn btn-success" })
+</p>
+
+
+<table class="table">
+    <tr>
+        <th>
+            @Html.DisplayNameFor(model => model.descipcion)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.precio)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.cantidad)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.sku)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.fechaIngreso)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.fechaCaducidad)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.Categoria.descipcion)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.UnidadMedida.descipcion)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.idProveedor)
+        </th>
+        <th>
+            @Html.DisplayNameFor(model => model.tarifaImpuesto)
+        </th>
+        <th></th>
+    </tr>
+
+@foreach (var item in Model) {
+    <tr>
+        <td>
+            @Html.DisplayFor(modelItem => item.descipcion)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.precio)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.cantidad)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.sku)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.fechaIngreso)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.fechaCaducidad)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.Categoria.descipcion)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.UnidadMedida.descipcion)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.idProveedor)
+        </td>
+        <td>
+            @Html.DisplayFor(modelItem => item.tarifaImpuesto)
+        </td>
+        <td>
+
+            @Html.ActionLink("Editar", "Edit", new { id = item.idArticulo }, new { @class = "btn btn-warning" })
+            @Html.ActionLink("Detalles", "Details", new { id = item.idArticulo }, new { @class = "btn btn-info" })
+            @Html.ActionLink("Eliminar", "Delete", new { id = item.idArticulo }, new { @class = "btn btn-danger" })
+        </td>
+    </tr>
+}
+
+</table>
diff --git a/restauranteASP/Views/Home/CRUD.cshtml b/restauranteASP/Views/Home/CRUD.cshtml
index a9e084a..b3764f8 100644
--- a/restauranteASP/Views/Home/CRUD.cshtml
+++ b/restauranteASP/Views/Home/CRUD.cshtml
@@ -25,4 +25,29 @@
                 </div>
             </div>
         </div>
+
+
+        <div class="row pt-3">
+            <div class="col-sm-6">
+                <div class="card">
+                    <div class="card-body">
+                        <h5 class="card-title">Inventario</h5>
+                        <p class="card-text">Mantenimiento del inventario, catalogo de articulos, platos y servicios que se pueden facturar</p>
+
+                        @Html.ActionLink("IR", "Index", "Articulo", null, new { @class = "btn btn-primary" })
+
+                    </div>
+                </div>
+            </div>
+            <div class="col-sm-6">
+                <div class="card">
+                    <div class="card-body">
+                        <h5 class="card-title">--------</h5>
+                        <p class="card-text">--------------</p>
+                        <a href="#" class="btn btn-primary">IR</a>
+                    </div>
+                </div>
+            </div>
+        </div>
+
     </div>
diff --git a/restauranteASP/Views/Mesas/Delete.cshtml b/restauranteASP/Views/Mesas/Delete.cshtml
index 44f9295..c0e445a 100644
--- a/restauranteASP/Views/Mesas/Delete.cshtml
+++ b/restauranteASP/Views/Mesas/Delete.cshtml
@@ -1,7 +1,8 @@
 ﻿@model restauranteASP.Mesa
 
 @{
-    ViewBag.Title = "Mesa";
+    ViewBag.Title = "Eliminar Mesa";
+    Layout = "~/Views/Shared/_Layout.cshtml";
 }
 
     <h4 class="pt-1">Mesa</h4>
diff --git a/restauranteASP/Views/Mesas/Details.cshtml b/restauranteASP/Views/Mesas/Details.cshtml
index f969535..54bc4cf 100644
--- a/restauranteASP/Views/Mesas/Details.cshtml
+++ b/restauranteASP/Views/Mesas/Details.cshtml
@@ -1,7 +1,7 @@
 ﻿@model restauranteASP.Mesa
 
 @{
-    ViewBag.Title = "Mesa";
+    ViewBag.Title = "Detalles de Mesa";
 }
 
     <div>
diff --git a/restauranteASP/restauranteASP.csproj b/restauranteASP/restauranteASP.csproj
index f2dafe0..03ad2b3 100644
--- a/restauranteASP/restauranteASP.csproj
+++ b/restauranteASP/restauranteASP.csproj
@@ -140,10 +140,14 @@
     <Compile Include="CajaTipoMoviento.cs">
       <DependentUpon>restauranteBD.tt</DependentUpon>
     </Compile>
+    <Compile Include="Categoria.cs">
+      <DependentUpon>restauranteBD.tt</DependentUpon>
+    </Compile>
     <Compile Include="Cliente.cs">
       <DependentUpon>restauranteBD.tt</DependentUpon>
     </Compile>
-    <Compile Include="Controllers\CRUD\MesaCRUD\MesasController.cs" />
+    <Compile Include="Controllers\CRUD\ArticuloController.cs" />
+    <Compile Include="Controllers\CRUD\MesasController.cs" />
     <Compile Include="Controllers\HomeController.cs" />
     <Compile Include="Global.asax.cs">
       <DependentUpon>Global.asax</DependentUpon>
@@ -191,6 +195,9 @@
     <Compile Include="sysdiagrams.cs">
       <DependentUpon>restauranteBD.tt</DependentUpon>
     </Compile>
+    <Compile Include="UnidadMedida.cs">
+      <DependentUpon>restauranteBD.tt</DependentUpon>
+    </Compile>
     <Compile Include="Usuario.cs">
       <DependentUpon>restauranteBD.tt</DependentUpon>
     </Compile>
@@ -357,9 +364,15 @@
     <Content Include="Views\Mesas\Edit.cshtml" />
     <Content Include="Views\Mesas\Index.cshtml" />
     <Content Include="Views\Home\CRUD.cshtml" />
+    <Content Include="Views\Articulo\Create.cshtml" />
+    <Content Include="Views\Articulo\Delete.cshtml" />
+    <Content Include="Views\Articulo\Details.cshtml" />
+    <Content Include="Views\Articulo\Edit.cshtml" />
+    <Content Include="Views\Articulo\Index.cshtml" />
   </ItemGroup>
   <ItemGroup>
     <Folder Include="App_Data\" />
+    <Folder Include="Controllers\CRUD\MesaCRUD\" />
     <Folder Include="Models\" />
     <Folder Include="Views\CRUD\" />
   </ItemGroup>
diff --git a/restauranteASP/restauranteBD.Context.cs b/restauranteASP/restauranteBD.Context.cs
index 79cfca3..9418701 100644
--- a/restauranteASP/restauranteBD.Context.cs
+++ b/restauranteASP/restauranteBD.Context.cs
@@ -40,6 +40,8 @@ namespace restauranteASP
         public virtual DbSet<Rol> Rol { get; set; }
         public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
         public virtual DbSet<Usuario> Usuario { get; set; }
+        public virtual DbSet<Categoria> Categoria { get; set; }
+        public virtual DbSet<UnidadMedida> UnidadMedida { get; set; }
     
         public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
         {
diff --git a/restauranteASP/restauranteBD.edmx b/restauranteASP/restauranteBD.edmx
index 6464135..3b23f41 100644
--- a/restauranteASP/restauranteBD.edmx
+++ b/restauranteASP/restauranteBD.edmx
@@ -4,7 +4,7 @@
   <edmx:Runtime>
     <!-- SSDL content -->
     <edmx:StorageModels>
-      <Schema Namespace="restauranteModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
+    <Schema Namespace="restauranteModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
         <EntityType Name="Articulo">
           <Key>
             <PropertyRef Name="idArticulo" />
@@ -49,6 +49,14 @@
           <Property Name="idCajaMovimiento" Type="int" Nullable="false" />
           <Property Name="descripcion" Type="varchar" MaxLength="50" />
         </EntityType>
+        <EntityType Name="Categoria">
+          <Key>
+            <PropertyRef Name="idCategoria" />
+          </Key>
+          <Property Name="idCategoria" Type="int" Nullable="false" />
+          <Property Name="descipcion" Type="varchar" MaxLength="50" />
+          <Property Name="activo" Type="bit" />
+        </EntityType>
         <EntityType Name="Cliente">
           <Key>
             <PropertyRef Name="idCliente" />
@@ -132,6 +140,14 @@
           <Property Name="version" Type="int" />
           <Property Name="definition" Type="varbinary(max)" />
         </EntityType>
+        <EntityType Name="UnidadMedida">
+          <Key>
+            <PropertyRef Name="idUnidadMedida" />
+          </Key>
+          <Property Name="idUnidadMedida" Type="int" Nullable="false" />
+          <Property Name="descipcion" Type="varchar" MaxLength="50" />
+          <Property Name="activo" Type="bit" />
+        </EntityType>
         <EntityType Name="Usuario">
           <Key>
             <PropertyRef Name="usuario" />
@@ -148,6 +164,30 @@
           <Property Name="idUsuario" Type="varchar" MaxLength="20" Nullable="false" />
           <Property Name="idRol" Type="int" Nullable="false" />
         </EntityType>
+        <Association Name="FK_Articulo_Categoria">
+          <End Role="Categoria" Type="Self.Categoria" Multiplicity="1" />
+          <End Role="Articulo" Type="Self.Articulo" Multiplicity="*" />
+          <ReferentialConstraint>
+            <Principal Role="Categoria">
+              <PropertyRef Name="idCategoria" />
+            </Principal>
+            <Dependent Role="Articulo">
+              <PropertyRef Name="idCategoria" />
+            </Dependent>
+          </ReferentialConstraint>
+        </Association>
+        <Association Name="FK_Articulo_UnidadMedida">
+          <End Role="UnidadMedida" Type="Self.UnidadMedida" Multiplicity="1" />
+          <End Role="Articulo" Type="Self.Articulo" Multiplicity="*" />
+          <ReferentialConstraint>
+            <Principal Role="UnidadMedida">
+              <PropertyRef Name="idUnidadMedida" />
+            </Principal>
+            <Dependent Role="Articulo">
+              <PropertyRef Name="idUnidadMedida" />
+            </Dependent>
+          </ReferentialConstraint>
+        </Association>
         <Association Name="FK_CajaMovimiento_Caja">
           <End Role="Caja" Type="Self.Caja" Multiplicity="1" />
           <End Role="CajaMovimiento" Type="Self.CajaMovimiento" Multiplicity="*" />
@@ -328,6 +368,7 @@
           <EntitySet Name="Caja" EntityType="Self.Caja" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="CajaMovimiento" EntityType="Self.CajaMovimiento" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="CajaTipoMoviento" EntityType="Self.CajaTipoMoviento" Schema="dbo" store:Type="Tables" />
+          <EntitySet Name="Categoria" EntityType="Self.Categoria" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="Cliente" EntityType="Self.Cliente" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="Mesa" EntityType="Self.Mesa" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="MesaEstado" EntityType="Self.MesaEstado" Schema="dbo" store:Type="Tables" />
@@ -336,8 +377,17 @@
           <EntitySet Name="PedidoEstado" EntityType="Self.PedidoEstado" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="Rol" EntityType="Self.Rol" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="sysdiagrams" EntityType="Self.sysdiagrams" Schema="dbo" store:Type="Tables" />
+          <EntitySet Name="UnidadMedida" EntityType="Self.UnidadMedida" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="Usuario" EntityType="Self.Usuario" Schema="dbo" store:Type="Tables" />
           <EntitySet Name="UsuarioRol" EntityType="Self.UsuarioRol" Schema="dbo" store:Type="Tables" />
+          <AssociationSet Name="FK_Articulo_Categoria" Association="Self.FK_Articulo_Categoria">
+            <End Role="Categoria" EntitySet="Categoria" />
+            <End Role="Articulo" EntitySet="Articulo" />
+          </AssociationSet>
+          <AssociationSet Name="FK_Articulo_UnidadMedida" Association="Self.FK_Articulo_UnidadMedida">
+            <End Role="UnidadMedida" EntitySet="UnidadMedida" />
+            <End Role="Articulo" EntitySet="Articulo" />
+          </AssociationSet>
           <AssociationSet Name="FK_CajaMovimiento_Caja" Association="Self.FK_CajaMovimiento_Caja">
             <End Role="Caja" EntitySet="Caja" />
             <End Role="CajaMovimiento" EntitySet="CajaMovimiento" />
@@ -387,8 +437,7 @@
             <End Role="UsuarioRol" EntitySet="UsuarioRol" />
           </AssociationSet>
         </EntityContainer>
-      </Schema>
-    </edmx:StorageModels>
+      </Schema></edmx:StorageModels>
     <!-- CSDL content -->
     <edmx:ConceptualModels>
       <Schema Namespace="restauranteModel" Alias="Self" annotation:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
@@ -408,6 +457,8 @@
           <Property Name="idProveedor" Type="Int32" />
           <Property Name="tarifaImpuesto" Type="Decimal" Precision="3" Scale="0" />
           <NavigationProperty Name="PedidoDetalle" Relationship="Self.FK_PedidoDetalle_Articulo" FromRole="Articulo" ToRole="PedidoDetalle" />
+          <NavigationProperty Name="Categoria" Relationship="restauranteModel.FK_Articulo_Categoria" FromRole="Articulo" ToRole="Categoria" />
+          <NavigationProperty Name="UnidadMedida" Relationship="restauranteModel.FK_Articulo_UnidadMedida" FromRole="Articulo" ToRole="UnidadMedida" />
         </EntityType>
         <EntityType Name="Caja">
           <Key>
@@ -761,6 +812,16 @@
             <Parameter Name="new_diagramname" Mode="In" Type="String" />
           </FunctionImport>
           <FunctionImport Name="sp_upgraddiagrams" />
+          <EntitySet Name="Categoria" EntityType="restauranteModel.Categoria" />
+          <EntitySet Name="UnidadMedida" EntityType="restauranteModel.UnidadMedida" />
+          <AssociationSet Name="FK_Articulo_Categoria" Association="restauranteModel.FK_Articulo_Categoria">
+            <End Role="Categoria" EntitySet="Categoria" />
+            <End Role="Articulo" EntitySet="Articulo" />
+          </AssociationSet>
+          <AssociationSet Name="FK_Articulo_UnidadMedida" Association="restauranteModel.FK_Articulo_UnidadMedida">
+            <End Role="UnidadMedida" EntitySet="UnidadMedida" />
+            <End Role="Articulo" EntitySet="Articulo" />
+          </AssociationSet>
         </EntityContainer>
         <ComplexType Name="sp_helpdiagramdefinition_Result">
           <Property Type="Int32" Name="version" Nullable="true" />
@@ -773,6 +834,48 @@
           <Property Type="String" Name="Owner" Nullable="true" MaxLength="128" />
           <Property Type="Int32" Name="OwnerID" Nullable="false" />
         </ComplexType>
+        <EntityType Name="Categoria">
+          <Key>
+            <PropertyRef Name="idCategoria" />
+          </Key>
+          <Property Name="idCategoria" Type="Int32" Nullable="false" />
+          <Property Name="descipcion" Type="String" MaxLength="50" FixedLength="false" Unicode="false" />
+          <Property Name="activo" Type="Boolean" />
+          <NavigationProperty Name="Articulo" Relationship="restauranteModel.FK_Articulo_Categoria" FromRole="Categoria" ToRole="Articulo" />
+        </EntityType>
+        <EntityType Name="UnidadMedida">
+          <Key>
+            <PropertyRef Name="idUnidadMedida" />
+          </Key>
+          <Property Name="idUnidadMedida" Type="Int32" Nullable="false" />
+          <Property Name="descipcion" Type="String" MaxLength="50" FixedLength="false" Unicode="false" />
+          <Property Name="activo" Type="Boolean" />
+          <NavigationProperty Name="Articulo" Relationship="restauranteModel.FK_Articulo_UnidadMedida" FromRole="UnidadMedida" ToRole="Articulo" />
+        </EntityType>
+        <Association Name="FK_Articulo_Categoria">
+          <End Type="restauranteModel.Categoria" Role="Categoria" Multiplicity="1" />
+          <End Type="restauranteModel.Articulo" Role="Articulo" Multiplicity="*" />
+          <ReferentialConstraint>
+            <Principal Role="Categoria">
+              <PropertyRef Name="idCategoria" />
+            </Principal>
+            <Dependent Role="Articulo">
+              <PropertyRef Name="idCategoria" />
+            </Dependent>
+          </ReferentialConstraint>
+        </Association>
+        <Association Name="FK_Articulo_UnidadMedida">
+          <End Type="restauranteModel.UnidadMedida" Role="UnidadMedida" Multiplicity="1" />
+          <End Type="restauranteModel.Articulo" Role="Articulo" Multiplicity="*" />
+          <ReferentialConstraint>
+            <Principal Role="UnidadMedida">
+              <PropertyRef Name="idUnidadMedida" />
+            </Principal>
+            <Dependent Role="Articulo">
+              <PropertyRef Name="idUnidadMedida" />
+            </Dependent>
+          </ReferentialConstraint>
+        </Association>
       </Schema>
     </edmx:ConceptualModels>
     <!-- C-S mapping content -->
@@ -956,6 +1059,24 @@
           </FunctionImportMapping>
           <FunctionImportMapping FunctionImportName="sp_renamediagram" FunctionName="restauranteModel.Store.sp_renamediagram" />
           <FunctionImportMapping FunctionImportName="sp_upgraddiagrams" FunctionName="restauranteModel.Store.sp_upgraddiagrams" />
+          <EntitySetMapping Name="Categoria">
+            <EntityTypeMapping TypeName="restauranteModel.Categoria">
+              <MappingFragment StoreEntitySet="Categoria">
+                <ScalarProperty Name="activo" ColumnName="activo" />
+                <ScalarProperty Name="descipcion" ColumnName="descipcion" />
+                <ScalarProperty Name="idCategoria" ColumnName="idCategoria" />
+              </MappingFragment>
+            </EntityTypeMapping>
+          </EntitySetMapping>
+          <EntitySetMapping Name="UnidadMedida">
+            <EntityTypeMapping TypeName="restauranteModel.UnidadMedida">
+              <MappingFragment StoreEntitySet="UnidadMedida">
+                <ScalarProperty Name="activo" ColumnName="activo" />
+                <ScalarProperty Name="descipcion" ColumnName="descipcion" />
+                <ScalarProperty Name="idUnidadMedida" ColumnName="idUnidadMedida" />
+              </MappingFragment>
+            </EntityTypeMapping>
+          </EntitySetMapping>
         </EntityContainerMapping>
       </Mapping>
     </edmx:Mappings>
diff --git a/restauranteASP/restauranteBD.edmx.diagram b/restauranteASP/restauranteBD.edmx.diagram
index 46e83dd..4a29f76 100644
--- a/restauranteASP/restauranteBD.edmx.diagram
+++ b/restauranteASP/restauranteBD.edmx.diagram
@@ -29,6 +29,10 @@
         <AssociationConnector Association="restauranteModel.FK_Pedido_Usuario" ManuallyRouted="false" />
         <AssociationConnector Association="restauranteModel.FK_PedidoDetalle_Pedido" ManuallyRouted="false" />
         <AssociationConnector Association="restauranteModel.UsuarioRol" ManuallyRouted="false" />
+        <EntityTypeShape EntityType="restauranteModel.Categoria" Width="1.5" PointX="3.75" PointY="0.75" />
+        <EntityTypeShape EntityType="restauranteModel.UnidadMedida" Width="1.5" PointX="3.75" PointY="22.25" />
+        <AssociationConnector Association="restauranteModel.FK_Articulo_Categoria" />
+        <AssociationConnector Association="restauranteModel.FK_Articulo_UnidadMedida" />
       </Diagram>
     </edmx:Diagrams>
   </edmx:Designer>
-- 
2.26.2.windows.1

